-- Load the UI library
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

-- Create a window using DrRay UI
local window = DrRayLibrary:Load("Rinns Hub", "Default")
local tab = DrRayLibrary.newTab("Main Tab", "ImageIdHere")

-- Kill all function
local function kill_all()
    -- Equips the first tool it finds in your backpack
    for _, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:FindFirstChild("Fire") then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
            break
        end
    end

    -- Sends a shoot event for every player online  
    for _, v in pairs(game.Players:GetPlayers()) do
        task.spawn(function()
            pcall(function()
                local Vec1 = Vector3.new(-186.46624755859375, 49.74998474121094, math.random(-49.323232, 49.488882))
                local Vec2 = Vector3.new(-254.47802734375, 68.99893188476562, math.random(-49.323232, 49.488882))
                local Vec3 = v.Character.LowerTorso
                local Vec4 = Vector3.new(-222.7018585205078, 60.864871978759766, math.random(-49.323232, 49.488882))
                
                game:GetService("ReplicatedStorage").Remotes.Shoot:FireServer(Vec1, Vec2, Vec3, Vec4)
            end)
        end)
    end
end

-- Loop kill all toggle state
local loopKillAllEnabled = false

-- Button to perform Kill All
tab.newButton("Kill All", "Kills Every Player In Your Match", function()
    kill_all()  -- Call the kill_all function when the button is pressed
end)

-- Toggle for Loop Kill All
tab.newToggle("Loop Kill All", "loops kill every player in your match", false, function(toggleState)
    loopKillAllEnabled = toggleState  -- Update the toggle state

    if loopKillAllEnabled then
        -- Loop to continuously perform Kill All
        while loopKillAllEnabled do
            task.spawn(function()
                kill_all()
            end)
            task.wait(1)  -- Adjust the delay as needed
        end
    end
end)

local auraEnabled = false
local knifeRange = 15 -- Default range

-- Knife Aura Toggle
tab.newToggle("Knife Aura", "Kills anyone in the range with your knife (have your knife out)", true, function(toggleState)
    auraEnabled = toggleState
    if toggleState then
        print("Knife Aura On")
        -- Start checking for players in range
        spawn(function()
            while auraEnabled do
                -- Get the local player's position
                local localPlayer = game.Players.LocalPlayer
                local localCharacter = localPlayer.Character
                if localCharacter and localCharacter:FindFirstChild("HumanoidRootPart") then
                    local localPosition = localCharacter.HumanoidRootPart.Position
                    
                    -- Loop through all players in the game
                    for _, player in pairs(game.Players:GetPlayers()) do
                        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            local targetPosition = player.Character.HumanoidRootPart.Position
                            local distance = (localPosition - targetPosition).Magnitude
                            
                            -- If the player is within the knife range
                            if distance <= knifeRange then
                                print("Found player in range: " .. player.Name)
                                
                                -- Replace 'Little_TrashMonkey' with the player in range
                                local args = {
                                    [1] = player.Character.UpperTorso
                                }
                                
                                -- Fire the server event
                                game:GetService("ReplicatedStorage").Remotes.Stab:FireServer(unpack(args))
                                
                                -- Add a slight delay to avoid rapid stabbing
                                wait(0.5)
                            end
                        end
                    end
                end
                wait(0.1) -- Adjust as needed for checking frequency
            end
        end)
    else
        print("Knife Aura Off")
    end
end)

-- Knife Aura Range Slider
tab.newSlider("Knife Aura Range", "Changes the range of the knife aura", 30, false, function(num)
    knifeRange = num -- Update the knife range with the slider value
    print("Knife range set to: " .. num)
end)

