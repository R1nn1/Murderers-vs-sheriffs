-- Load the UI library
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

-- Create a window using DrRay UI
local window = DrRayLibrary:Load("Rinns Hub", "Default")
local tab = window.newTab("Main Tab", "ImageIdHere")

-- Kill all function
local function kill_all()
    -- Equips the first tool it finds in your backpack
    for _, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:FindFirstChild("Fire") then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
            break
        end
    end

    -- Sends a shoot event for every player online  
    for _, v in pairs(game.Players:GetPlayers()) do
        task.spawn(function()
            pcall(function()
                local Vec1 = Vector3.new(-186.46624755859375, 49.74998474121094, math.random(-49.323232, 49.488882))
                local Vec2 = Vector3.new(-254.47802734375, 68.99893188476562, math.random(-49.323232, 49.488882))
                local Vec3 = v.Character.LowerTorso
                local Vec4 = Vector3.new(-222.7018585205078, 60.864871978759766, math.random(-49.323232, 49.488882))
                
                game:GetService("ReplicatedStorage").Remotes.Shoot:FireServer(Vec1, Vec2, Vec3, Vec4)
            end)
        end)
    end
end

-- Loop kill all toggle state
local loopKillAllEnabled = false

-- Button to perform Kill All
tab.newButton("Kill All", "Kills Every Player In Your Match", function()
    kill_all()  -- Call the kill_all function when the button is pressed
end)

-- Toggle for Loop Kill All
tab.newToggle("Loop Kill All", "loops kill every player in your match", false, function(toggleState)
    loopKillAllEnabled = toggleState  -- Update the toggle state

    if loopKillAllEnabled then
        -- Loop to continuously perform Kill All
        while loopKillAllEnabled do
            task.spawn(function()
                kill_all()
            end)
            task.wait(1)  -- Adjust the delay as needed
        end
    end
end)
